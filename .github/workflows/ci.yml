name: ci

on:
  push:
    branches:
      - main
      - dev
      - ci
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+**"

env:
  QT_SRC_DIR: ~/Qt/git/src
  QT_STATIC_DIR: ~/Qt/git/output

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macos-11
            version: 6.2.0
          - os: macos-12
            version: 6.2.0
          - os: windows-2019
            version: 6.2.0
          - os: windows-2019
            version: 6.2.1
          - os: windows-2019
            version: 6.2.2
          - os: windows-2019
            version: 6.2.3
    runs-on: ${{ matrix.os }}
    steps:
      # end of experiments
      - run: echo "ASSET=CanvasSync-${{ matrix.os }}.tar.gz">>$GITHUB_ENV
        if: startsWith(matrix.os, 'windows') == false
      - run: |
          echo "ASSET=CanvasSync-${{ matrix.os }}.tar.gz">>$env:GITHUB_ENV
          Add-Content $env:GITHUB_PATH 'C:/ProgramData/Chocolatey/bin'
          Add-Content $env:GITHUB_PATH 'C:/Strawberry/perl/bin'
          Add-Content $env:GITHUB_PATH 'C:/hostedtoolcache/windows/Ruby/2.5.9/x64/bin'
          Add-Content $env:GITHUB_PATH 'C:/hostedtoolcache/windows/Python/3.7.9/x64/bin'
          Add-Content $env:GITHUB_PATH 'C:/Program Files/CMake/bin'
          Add-Content $env:GITHUB_PATH 'C:/ProgramData/chocolatey/lib/zstandard/tools'
          Add-Content $env:GITHUB_PATH 'C:/ProgramData/chocolatey/lib/mingw/tools/install/mingw64/bin'
          choco install ninja mingw zstandard
        if: startsWith(matrix.os, 'windows')

      - uses: actions/checkout@v3

      # download pre-build static Qt libraries
      - run: |
          curl -fLo qt_static.tar.gz https://github.com/nguyenvukhang/qt-static/releases/download/v0.0.18/qt-${{ matrix.version }}-${{ matrix.os }}.tar.gz
          mkdir -p ${{ env.QT_STATIC_DIR }}
          tar -xvzf qt_static.tar.gz && mv qt_output/* ${{ env.QT_STATIC_DIR }}

      - run: xattr -cr ${{ env.QT_STATIC_DIR }}
        if: startsWith(matrix.os, 'macos')

      # build canvas-sync
      - run: cmake -DQT_STATIC_DIR=${{ env.QT_STATIC_DIR }} -DCMAKE_BUILD_TYPE=Release -S . -B build
        if: startsWith(matrix.os, 'windows') == false
      - run: cmake -DQT_STATIC_DIR=${{ env.QT_STATIC_DIR }} -DCMAKE_BUILD_TYPE=Release -S . -B build -G 'MinGW Makefiles'
        if: startsWith(matrix.os, 'windows')

      - run: cmake --build build

      # package app
      - run: cd build && tar -zcvf ${{ env.ASSET }} CanvasSync.app && mv ${{ env.ASSET }} ..
        if: startsWith(matrix.os, 'macos')
      - run: cd build && tar -zcvf ${{ env.ASSET }} CanvasSync.exe && mv ${{ env.ASSET }} ..
        if: startsWith(matrix.os, 'windows')

      # upload release package
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: ${{ env.ASSET }}
          generate_release_notes: true
